// Mixin that prints out multiple CSS classes that add borders in different colours to an element
// Two variables determine what gets generated
// 1. $borders-for-color is an array of color names that should get border classes. Nebula will then look up that color in the $colors map and use that.
// 2. $border-properties is an array of properties that should be generated. For example, assuming the existence of an 'accent' color, the default value ('border', 'border-bottom') will generate .n-border-accent, and .n-border-bottom-accent.
// A scale parameter can be passed to this mixin, detemining the size (in pixels) of the border. This is useful if you want to scale border sizes at a breakpoint.

@mixin border-rules($scale: 1) {
  @each $color in $borders-for-color {
    @each $propertyName in $border-properties {
      .#{$class-prefix}-#{$propertyName}-#{$color} {
        #{$propertyName}: ($scale * 1px) solid color($color);
      }
    }
  }
}

@if ($use-borders) {
  // On initial inclusion we also print the classes for 1px borders.
  @include border-rules();
}
