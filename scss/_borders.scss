////
/// @group Borders
////

/// Prints out multiple CSS classes for each `$border-properties` and `$border-colors`.
/// *If `$use-borders` is true, the result of this mixin is included in the default nebula.css output*.
/// @param {Number} $scale [1] - Determines the size (in pixels) of the border. This is useful if you want to scale border sizes at a breakpoint.
/// @output
/// ```scss
/// // Assuming default settings
/// .n-border-accent { border: 1px solid #009CDA; }
/// .n-border-bottom-accent { border-bottom: 1px solid #009CDA; }
///
/// .n-border-black { border: 1px solid #000000; }
/// .n-border-bottom-black { border-bottom: 1px solid #000000; }
/// ```
@mixin border-rules($scale: 1) {
  @each $color in $border-colors {
    @each $propertyName in $border-properties {
      @if not color($color) {
        @error "Can not generate #{$propertyName} class for color “#{$color}”, because it was not found in the $colors variable.";
      }

      .#{$class-prefix}-#{$propertyName}-#{$color} {
        #{$propertyName}: ($scale * 1px) solid color($color);
      }
    }
  }
}

@if ($use-borders) {
  /// On initial inclusion we also print the classes for the default border size.
  @include border-rules($border-size);
}
