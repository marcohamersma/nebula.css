@mixin font-rules($size) {
  font-size: #{$size}px;
  font-size: #{$size/10}rem;
}

@mixin rulesForSpaceValue($name, $value) {
  .#{$class-prefix}-spacing-#{$name} {
    margin: #{$value}px;
  }

  .#{$class-prefix}-vspacing-#{$name} {
    margin-top: #{$value}px;
    margin-bottom: #{$value}px;
  }

  .#{$class-prefix}-hspacing-#{$name} {
    margin-left: #{$value}px;
    margin-right: #{$value}px;
  }

  @each $direction in $spacingDirections {
    .#{$class-prefix}-spacing-#{$direction}-#{$name} {
      margin-#{$direction}: #{$value}px;
    }
  }

  .#{$class-prefix}-padding-#{$name} {
    padding: #{$value}px;
  }

  .#{$class-prefix}-vpadding-#{$name} {
    padding-top: #{$value}px;
    padding-bottom: #{$value}px;
  }

  .#{$class-prefix}-hpadding-#{$name} {
    padding-left: #{$value}px;
    padding-right: #{$value}px;
  }

  @each $direction in $spacingDirections {
    .#{$class-prefix}-padding-#{$direction}-#{$name} {
      padding-#{$direction}: #{$value}px;
    }
  }
}

@mixin spacingRules($spacingScale: 1) {
  /* Spacing */
  @each $name, $value in $spacingValues {
    @include rulesForSpaceValue($name, $value * $spacingScale)
  }
}

@mixin typeRules($bodyTextScale: 1, $headerTextScale: 1, $spacingScale: 1) {
  body {
    @include font-rules(raw-font-size('normal') * $bodyTextScale);
  }

  @each $name, $value in $fontBaseSizes {
    .#{$class-prefix}-font-#{$name} {
      @include font-rules($value * $bodyTextScale);
    }
  }

  @each $name, $value in $headerBaseSizes {
    #{$name},
    .#{$class-prefix}-font-#{$name} {
      @include font-rules($value * $headerTextScale);
    }
  }
}

@mixin scaledSpacingAndType($spacingScale, $bodyTextScale, $headerTextScale) {
  @include spacingRules($spacingScale);
  @include typeRules($bodyTextScale, $headerTextScale, $spacingScale);
}

@mixin borderRules($scale: 1) {
  @each $color in $bordersForColor {
    @each $propertyName in $borderProperties {
      .#{$class-prefix}-#{$propertyName}-#{$color} {
        #{$propertyName}: #{$scale}px solid color($color);
      }
    }
  }
}

// ----------------------------------------------------------------------------
// Font Feature Settings mixin by bitmanic
// From https://github.com/bitmanic/font-feature-settings
// ----------------------------------------------------------------------------

@mixin font-feature-settings($feature-list: false) {
  // Only proceed if a list of arguments was passed
  @if $feature-list {
    // Create an empty list for the standard syntax
    $standard: ();

    // Create an empty list for the old Mozilla syntax
    $old-moz: ();

    // Add each listed feature to the standard and old Mozilla values
    @each $feature in $feature-list {
      $standard: append($standard, '#{$feature}' 1, 'comma');
      $old-moz: append($old-moz, '#{$feature}=1', 'comma');
    }

    // Finally, print out the prefixed and non-prefixed code for all of the listed features
    -moz-font-feature-settings: $old-moz;
    -moz-font-feature-settings: $standard;
    -ms-font-feature-settings: $standard;
    -o-font-feature-settings: $standard;
    -webkit-font-feature-settings: $standard;
    font-feature-settings: $standard;
  }
}
