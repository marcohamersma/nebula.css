@mixin font-rules($size) {
  font-size: $size * 1px;
  // This is somehow causing issues in chrome until it rerenders. But just doing pixel sizing is bad
  // font-size: $size / 10 * 1rem;
}

@mixin rules-for-space-value($name, $value) {
  .#{$class-prefix}-spacing-#{$name} {
    margin: $value * 1px;
  }

  .#{$class-prefix}-vspacing-#{$name} {
    margin-top: $value * 1px;
    margin-bottom: $value * 1px;
  }

  .#{$class-prefix}-hspacing-#{$name} {
    margin-left: $value * 1px;
    margin-right: $value * 1px;
  }


  // Should work on any element, basically.
  // this doesn't work at all, what if there's more than two columns?

  .#{$class-prefix}-column-#{$name} {
    @media screen and (max-width: $breakpoint-column) {
      &:last-child { margin-bottom: 0; }
      margin-bottom: $value * 1px;
    }

    @media screen and (min-width: $breakpoint-column + 1) {
      &:last-child { margin-right: 0; }
      margin-right: $value * 1px;
    }
  }

  .#{$class-prefix}-column-p-#{$name} {
    box-sizing: border-box;
    @media screen and (max-width: $breakpoint-column) {
      &:last-child { padding-bottom: 0; }
      padding-bottom: $value * 1px;
    }

    @media screen and (min-width: $breakpoint-column + 1) {
      &:last-child { padding-right: 0; }
      padding-right: $value * 1px;
    }
  }

  @each $direction in $spacing-directions {
    .#{$class-prefix}-spacing-#{$direction}-#{$name} {
      margin-#{$direction}: $value * 1px;
    }
  }

  .#{$class-prefix}-padding-#{$name} {
    padding: $value * 1px;
  }

  .#{$class-prefix}-vpadding-#{$name} {
    padding-top: $value * 1px;
    padding-bottom: $value * 1px;
  }

  .#{$class-prefix}-hpadding-#{$name} {
    padding-left: $value * 1px;
    padding-right: $value * 1px;
  }

  @each $direction in $spacing-directions {
    .#{$class-prefix}-padding-#{$direction}-#{$name} {
      padding-#{$direction}: $value * 1px;
    }
  }
}

@mixin spacing-rules($spacingScale: 1) {
  /* Spacing */
  @each $name, $value in $spacing-values {
    @include rules-for-space-value($name, $value * $spacingScale)
  }
}

@mixin type-rules($bodyTextScale: 1, $headerTextScale: 1, $spacingScale: 1) {
  body {
    @include font-rules(raw-font-size('normal') * $bodyTextScale);
  }

  @each $name, $value in $font-base-sizes {
    .#{$class-prefix}-font-#{$name} {
      @include font-rules($value * $bodyTextScale);
    }
  }

  @each $name, $value in $header-base-sizes {
    #{$name},
    .#{$class-prefix}-font-#{$name} {
      @include font-rules($value * $headerTextScale);
    }
  }
}

@mixin scaled-spacing-and-type($spacingScale, $bodyTextScale, $headerTextScale) {
  @include spacing-rules($spacingScale);
  @include type-rules($bodyTextScale, $headerTextScale, $spacingScale);
}

@mixin border-rules($scale: 1) {
  @each $color in $borders-for-color {
    @each $propertyName in $border-properties {
      .#{$class-prefix}-#{$propertyName}-#{$color} {
        #{$propertyName}: ($scale * 1px) solid color($color);
      }
    }
  }
}

// ----------------------------------------------------------------------------
// Font Feature Settings mixin by bitmanic
// From https://github.com/bitmanic/font-feature-settings
// ----------------------------------------------------------------------------

@mixin font-feature-settings($feature-list: false) {
  // Only proceed if a list of arguments was passed
  @if $feature-list {
    // Create an empty list for the standard syntax
    $standard: ();

    // Create an empty list for the old Mozilla syntax
    $old-moz: ();

    // Add each listed feature to the standard and old Mozilla values
    @each $feature in $feature-list {
      $standard: append($standard, '#{$feature}' 1, 'comma');
      $old-moz: append($old-moz, '#{$feature}=1', 'comma');
    }

    // Finally, print out the prefixed and non-prefixed code for all of the listed features
    -moz-font-feature-settings: $old-moz;
    -moz-font-feature-settings: $standard;
    -ms-font-feature-settings: $standard;
    -o-font-feature-settings: $standard;
    -webkit-font-feature-settings: $standard;
    font-feature-settings: $standard;
  }
}
